I"Þ<p class="text-left"><i>Authors: Zhengdong Zhang, Amr Suleiman, Luca Carlone, Vivienne Sze, Sertac Karaman</i></p>

<p>Autonomous navigation of miniaturized robots (e.g., nano/pico aerial vehicles) is currently a grand challenge for robotics research, due to the need for processing a large amount of sensor data (e.g., camera frames) with limited on-board computational resources. In this paper we focus on the design of a visual-inertial odometry (VIO) system in which the robot estimates its ego-motion (and a landmark-based map) from on- board camera and IMU data. We argue that scaling down VIO to miniaturized platforms (without sacrificing performance) requires a paradigm shift in the design of perception algorithms, and we advocate a co-design approach in which algorithmic and hardware design choices are tightly coupled. Our contribution is four-fold. First, we discuss the VIO co-design problem, in which one tries to attain a desired resource-performance trade-off, by making suitable design choices (in terms of hardware, algorithms, implementation, and parameters). Second, we characterize the design space, by discussing how a relevant set of design choices affects the resource-performance trade-off in VIO. Third, we provide a systematic experiment-driven way to explore the design space, towards a design that meets the desired trade-off. Fourth, we demonstrate the result of the co-design process by providing a VIO implementation on specialized hardware and showing that such implementation has the same accuracy and speed of a desktop implementation, while requiring a fraction of the power.</p>

<p>[<b><a href="/static/papers/74.pdf">Full Paper</a></b> | <b><a href="/static/slides/74.mp4">Slides</a></b>]</p>

<div id="disqus_thread"></div>
<script>
var disqus_config = function () {
this.page.url = "http://roboticsconference.org/program/papers/74/";
this.page.identifier = "/program/papers/74";
};
(function() {
var d = document, s = d.createElement('script');
s.src = 'https://rss-2017.disqus.com/embed.js';
s.setAttribute('data-timestamp', +new Date());
(d.head || d.body).appendChild(s);
})();
</script>

<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>

:ET